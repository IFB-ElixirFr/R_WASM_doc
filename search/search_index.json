{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to R WASM platform documentation","text":""},{"location":"Components/components_01_intro/","title":"Introduction","text":"<p>Components to enrich markdown files.</p>"},{"location":"Components/components_02_quizz/","title":"Quizz","text":""},{"location":"Components/components_02_quizz/#simple","title":"Simple","text":"<pre><code>::Quiz\n---\nquestion: \"Il est conseill\u00e9 d'utiliser l'op\u00e9rateur '=' plut\u00f4t que '&lt;-' pour l'assignation ?\"\ntype: simple\nchoices:\n    -   value: \"oui\"\n        valid: false\n    -   value: \"non\"\n        valid: true\n---\n::\n</code></pre>"},{"location":"Components/components_02_quizz/#multiple","title":"Multiple","text":"<pre><code>::Quiz\n---\nquestion: \"Dans la question pr\u00e9c\u00e9dente, pourquoi faut-il mettre *file* entre guillemets et \u00e9crire apropos('file') et non pas apropos(file)\"\ntype: multiple\nchoices:\n    -   value: \"Parce que *file* sans guillemet sous-entendrait qu'il existe en m\u00e9moire un objet nomm\u00e9 *file*.\"\n        valid: true\n    -   value: \"Parce que le premier argument de la fonction *apropos()* doit obligatoirement \u00eatre un cha\u00eene de caract\u00e8re.\"\n        valid: true\n---\n::\n</code></pre>"},{"location":"Components/components_03_orderProps/","title":"Order propositions","text":"<pre><code>::Sort\n---\nelements:\n    - Description\n    - Usage\n    - Arguments\n    - Value\n    - See Also\n    - Examples\nquestion: \"Quel est l'ordre des diff\u00e9rentes section dans la fiche d'aide ?\"\n---\n::\n</code></pre>"},{"location":"Components/components_04_exo/","title":"Exercice","text":"<pre><code>::Exo\n---\nconsigne: \"Recherchez toutes les fonctions dont le nom contient 'file' (*i.e* fichier). Attention 'file' doit \u00eatre entre guillemets.\"\ntips: En informatique on parle de guillemets simples ou simples guillemets pour faire r\u00e9f\u00e9rence  \u00e0 l'apostrophe (' '). On parle de guillemets doubles ou doubles guillemets pour faire r\u00e9f\u00e9rence au guillemets (\" \"). Cette appellation nous vient du monde anglo-saxon (*single quote* et *double quote*). Dans le langage R, les deux formes ont la m\u00eame signification et permettent de d\u00e9signer une suite de caract\u00e8res qu'on appelle *cha\u00eene de caract\u00e8res* (ici 'file' ou \"file\"). Cela permet une certaine flexibilit\u00e9 si une cha\u00eene de caract\u00e8res contient un guillemet simple par exemple (*e.g.* x &lt;- \"extr\u00e9mit\u00e9s 5' et 3' des mol\u00e9cules d'ADN\").\nsolution: apropos(\"file\")\n---\n::\n</code></pre>"},{"location":"Components/components_05_execute/","title":"Execute code","text":"<pre><code>:Execute{\n    command=\"x = 15\nprint(x)\"\n}\n</code></pre>"},{"location":"Deployment/deployment_01_install/","title":"Installation","text":"<p>Make sure to install the dependencies:</p> <pre><code>yarn install\n</code></pre>"},{"location":"Deployment/deployment_02_devServer/","title":"Dev server","text":""},{"location":"Deployment/deployment_02_devServer/#development-server","title":"Development Server","text":"<p>Start the development server on <code>http://localhost:3000</code>:</p> <pre><code>yarn dev\n</code></pre>"},{"location":"Deployment/deployment_03_prodServer/","title":"Send to prod","text":""},{"location":"Deployment/deployment_03_prodServer/#production","title":"Production","text":"<p>Build the application for production:</p> <pre><code>yarn deploy\n</code></pre>"}]}